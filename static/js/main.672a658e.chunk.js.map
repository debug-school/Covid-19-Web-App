{"version":3,"sources":["components/Country/Country.js","components/CountryList/CountryList.js","components/SearchBox/SearchBox.js","App.js","index.js"],"names":["Country","props","className","src","stats","CountryCode","alt","Active","Confirmed","Deaths","Recovered","CountryList","map","country","key","CountryCoude","SearchBox","type","placeholder","onChange","handleChange","vale","value","App","e","setState","searchField","target","state","countries","fetch","resp","json","this","forEach","a","Slug","data","length","prevState","concat","ISO2","filteredCountries","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAkBeA,G,YAfC,SAACC,GAChB,OACC,yBAAKC,UAAU,WACd,yBAAKC,IAAG,sCAAiCF,EAAMG,MAAMC,YAA7C,gBAAwEC,IAAKL,EAAMG,MAAMJ,UACjG,gCAAMC,EAAMG,MAAMJ,QAAlB,KACA,yBAAKE,UAAU,YACd,kDAAiBD,EAAMG,MAAMG,QAA7B,KACA,qDAAoBN,EAAMG,MAAMI,WAAhC,KACA,kDAAiBP,EAAMG,MAAMK,QAA7B,KACA,qDAAoBR,EAAMG,MAAMM,WAAhC,SCAWC,G,MARK,SAACV,GACpB,OACC,yBAAKC,UAAU,eACZD,EAAMG,MAAMQ,KAAK,SAACC,GAAD,OAAY,kBAAC,EAAD,CAASC,IAAKD,EAAQE,aAAcX,MAAOS,UCS9DG,G,MAbG,SAACf,GAClB,OACC,6BACC,2BAAOgB,KAAK,SACXf,UAAU,SACVgB,YAAajB,EAAMiB,YACnBC,SAAUlB,EAAMmB,aAChBC,KAAMpB,EAAMqB,WCqDDC,E,kDAtDd,aAAc,IAAD,8BACV,gBAqBFH,aAAe,SAACI,GACd,EAAKC,SAAU,CAACC,YAAYF,EAAEG,OAAOL,SArBrC,EAAKM,MAAQ,CACZC,UAAU,GACVzB,MAAM,GACNsB,YAAY,IALH,E,yMASSI,MAAM,wC,cAAnBC,E,gBACkBA,EAAKC,O,OAAvBH,E,OACNI,KAAKR,SAAS,CAACI,cACfI,KAAKL,MAAMC,UAAUK,QAArB,uCAA6B,WAAMrB,GAAN,iBAAAsB,EAAA,sEACRL,MAAM,4CAAD,OAA6CjB,EAAQuB,OADlD,cACrBL,EADqB,gBAERA,EAAKC,OAFG,QAErBK,EAFqB,QAGnBC,QACR,EAAKb,UAAS,SAAAc,GAAS,MACrB,CAACnC,MAAMmC,EAAUnC,MAAMoC,OAAhB,2BAA2BH,EAAKA,EAAKC,OAAS,IAA9C,IAAiDjC,YAAYQ,EAAQ4B,YALnD,2CAA7B,kCAAAR,KAAA,gB,qIAcQ,IAAD,EACqBA,KAAKL,MAA1BxB,EADA,EACAA,MAAMsB,EADN,EACMA,YACPgB,EAAoBtC,EAAMuC,QAAO,SAAC9B,GACtC,OAAOA,EAAQb,QAAQ4C,cAAcC,SAASnB,EAAYkB,kBAG5D,OACE,kBAAC,WAAD,KACE,0CACA,4CAEA,yBAAK1C,UAAU,OACb,qDAEA,kBAAC,EAAD,CACEgB,YAAY,yBACZE,aAAca,KAAKb,aACnBE,MAAOW,KAAKP,cAEd,kBAAC,EAAD,CAAatB,MAAOsC,U,GA/CZI,aCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.672a658e.chunk.js","sourcesContent":["import React from 'react';\nimport './Country.css';\n\nconst Country = (props) => {\n\treturn (\n\t\t<div className=\"country\">\n\t\t\t<img src={`https://www.countryflags.io/${props.stats.CountryCode}/flat/64.png`} alt={props.stats.Country}/>\n\t\t\t<h1> {props.stats.Country} </h1>\n\t\t\t<div className=\"describe\">\n\t\t\t\t<p> {`Active : ${props.stats.Active}`} </p>\n\t\t\t\t<p> {`Confirmed : ${props.stats.Confirmed}`} </p>\n\t\t\t\t<p> {`Deaths : ${props.stats.Deaths}`} </p>\n\t\t\t\t<p> {`Recovered : ${props.stats.Recovered}`} </p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Country;","import React from 'react';\nimport Country from '../Country/Country.js';\nimport './CountryList.css';\n\nconst CountryList = (props) => {\n\treturn (\n\t\t<div className=\"CountryList\">\n\t\t\t{ props.stats.map( (country)=> <Country key={country.CountryCoude} stats={country}/> ) }\n\t\t</div>\n\t)\n}\n\nexport default CountryList;","import React from 'react';\nimport './SearchBox.css';\n\nconst SearchBox = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<input type=\"search\"\n\t\t\t\tclassName=\"search\"\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\tonChange={props.handleChange}\n\t\t\t\tvale={props.value}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default SearchBox;","import React ,{Component,Fragment} from 'react';\nimport './App.css';\n\nimport CountryList from './components/CountryList/CountryList.js';\nimport SearchBox from './components/SearchBox/SearchBox.js';\n\n\nclass App extends Component {\n\n constructor(){\n    super();\n    this.state = {\n     countries:[],\n     stats:[],\n     searchField:''\n    }\n  }\n  async componentDidMount(){\n    const resp = await fetch('https://api.covid19api.com/countries')\n    const countries = await resp.json()\n    this.setState({countries})\n    this.state.countries.forEach(async country => {\n      const resp = await fetch(`https://api.covid19api.com/total/country/${country.Slug}`)\n      const data = await resp.json()\n      if(data.length)\n      this.setState(prevState => (\n        {stats:prevState.stats.concat({...data[data.length - 1],CountryCode:country.ISO2})}\n      ))\n    })\n  }\n\n  handleChange = (e)=>{\n    this.setState( {searchField:e.target.value} );\n  }\n\n  render() {\n    const {stats,searchField} = this.state;\n    const filteredCountries = stats.filter((country)=>{\n      return country.Country.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    return (\n      <Fragment>\n        <h3>Rasel Rana</h3>\n        <h5>Debug School</h5>\n\n        <div className=\"App\">\n          <h1>Covid19 Stats Web App</h1>\n\n          <SearchBox\n            placeholder=\"Enter country name....\"\n            handleChange={this.handleChange}\n            value={this.searchField}\n          />\n          <CountryList stats={filteredCountries} />\n\n        </div>\n      </Fragment>\n    )\n  }\n\n}\n\nexport default App;\n//","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}